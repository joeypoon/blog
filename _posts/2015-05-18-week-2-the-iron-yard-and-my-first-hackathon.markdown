---
layout:     post
title:      "Week 2 The Iron Yard and My First Hackathon"
subtitle:   ""
date:       2015-05-18
author:     "Joey F. Poon"
header-img: "img/home-bg.jpg"
---

<a href="http://temp.nickydisla.com/temp/wp-content/uploads/2015/05/hackhou1-e1432449708626.jpeg"><img src="http://temp.nickydisla.com/temp/wp-content/uploads/2015/05/hackhou1-e1432449708626.jpeg" alt="hackhou" class="aligncenter" ></a>

<h3>Transformation</h3>
<p>I started dreaming in code a couple months back but it has recently become the dominant form of dreaming for me. I often find myself waking up to arrays and hashes. Earlier this week, I almost asked my girlfriend for an array of what she wanted for dinner so I could call <span class="lang:ruby decode:true  crayon-inline " >.sample</span>  on it. Every time she tells me she wants a Corgi, <pre>Corgi.new</pre> flashes in my head. I find myself unconsciously trying to figure out how to organize daily things into data. I won't lie, I'm starting to feel a sense of achievement with how nerdy I'm becoming. Just everyday life while attending TIY.</p>

<h3>Monday</h3>
<p>Agenda: Lab review, instance variables, and modules. So apparently I completely forgot to mention the fact that most days start off with a challenge. Monday <a href="https://github.com/joeypoon/iron_yard/blob/master/day-6/day-6-challenge.rb">challenge</a>. The goal was to, given an array of arrays of integers (yay English), get the sum of each row and the average of all elements. Seems designed to refresh our memories on enumerators. We are only given 15 minutes for challenges at the end of which we are shown how much more efficient Jesse is at programming. The next thirty minutes or so was spent reviewing our <a href="https://github.com/joeypoon/week-1-lab">week 1 lab</a>. Lecture covering ivars and modules followed. <a href="https://github.com/joeypoon/iron_yard/blob/master/day-6/day-6.rb">Homework</a>.</p>

<h3>Tuesday</h3>
<p><a href="https://github.com/joeypoon/iron_yard/blob/master/day-7/day-7-challenge.rb">Challenge</a>. More reviewing enumerators with some classes thrown in. Lecture today was over...testing! Yay. Hopefully I can start to write <a href="http://joeypoon.com/blog/2015/04/14/on-the-road-to-testing/">less bad tests</a>. Second half of lecture was over <span class="lang:ruby decode:true  crayon-inline " >self</span>. Today's assignment was recreating rock, paper, scissors. It was a little tougher than our past homework assignments and had a hard mode. The hardest part for me was thinking of an elegant way to check the winner without writing a huge if tree. I ended up creating a flag attribute and passing in the user's choice to get the flag value. <a href="https://github.com/joeypoon/iron_yard/tree/master/day-7">Homework</a>.</p>

<h3>Wednesday</h3>
<p>Why hello there, Fizzbuzz. We had two challenges this morning, good ole' Fizzbuzz and Palindrome. <a href="https://github.com/joeypoon/iron_yard/blob/master/day-8/day-8-challenge.rb">Challenge</a>. Being able to add methods to pre-existing classes is awesome. Lecture today was over array methods(.pop/.shift, etc.). The main point was that some methods mutate the original array whereas others create a new array. Assignments appear to be getting harder and harder. Today's assignment was to create a program that assigned secret santas. Creating an algorithm for solving the assignment seemed fairly simple but I kept getting unexpected values. After way too much debugging, I realized that I wasn't creating a new array with equal values. I was simply pointing two variables to the same array. Derp, all I needed was a <span class="lang:ruby decode:true  crayon-inline " >.dup</span>. <a href="https://github.com/joeypoon/iron_yard/tree/master/day-8">Homework</a>. Testing is definitely starting to make a little more sense. The hardest part of TDD for me was knowing what tests to write. Watching Jesse write tests and going through his thought process really helped me understand how I should be thinking. I'm starting to see a difference in the way I approach problems. Having trouble thinking of how to test something? Probably need to rethink your solution.</p>

<h3>Thursday</h3>
<p>Lab assignment day! I love lab assignments (yes, I realize this is only my second one). I'm skipping a little ahead though. Can't forget the challenges. Today's challenges were quite interesting. Our first challenge was to write a method that could break a dollar amount down into the least possible number of coins (25, 10, 5, and 1 cents) and to display them in an array, including repeats. My first thought was to use modulo to get the number of times a coin could go into the dollar amount and return the remainder. The solution worked but then I tried to add it to the Fixnum class for fun and it went boom.
<img src="{{ site.baseurl }}/img/cat_boom.gif" alt="cat_boom">
From what I could tell, it didn't like me adding ivars into the class? After watching Jesse create his solution, I was able to rework my solution to loop and store the coin denominations into an array directly. Our second challenge was to create a credit card number checker. I never realized that there was maths behind the numbers that determined the validity of the numbers so that was cool to learn. We weren't actually assigned the second challenge since we spent too much time on the first challenge but my Asian-ness forced me to do it anyways. To check the card numbers we just need to double every other digit in the card, starting from the back, sum every digit together and make sure the total is divisible by 10. A combination of <span class="lang:ruby decode:true  crayon-inline " >.reverse</span>, <span class="lang:ruby decode:true  crayon-inline " >.map</span>, looping, <span class="lang:ruby decode:true  crayon-inline " >.reduce(:+)</span>, and modulo provided a valid solution. <a href="https://github.com/joeypoon/iron_yard/tree/master/day-9">Challenges</a>.</p>
<p>Today was a little different in that we also had a guest speaker. As soon as we were assigned our lab we crowded into the commons to hear an amazing talk by Justin Richards of Brightblack Data Services. The topic was on natural language processing, machine learning, and Bayes' Theorem. Justin did a quick overview of probability and Bayes' Theorem. He then did a live demo of training a program to rate movie reviews using Python and the NLTK library. I didn't think I would like data science but this was some pretty awesome stuff. I had to head to work so I unfortunately wasn't able to stay for everything.</p>

<h3>Friday</h3>
<p>Lab for this week is to re-create <a href="https://github.com/tiy-hou-q2-2015-rails/week-2-lab">Blackjack</a>. For this lab I decided to force myself to adhere to TDD and the red, green, refactor cycle by write tests before implementing. I definitely feel like it helped me organize the program better. I think the most challenging part of this assignment (other than knowing what tests to write) was figuring out where to place my methods. For example, should I put my draw function in the <span class="lang:ruby decode:true  crayon-inline " >class Player</span> , <span class="lang:ruby decode:true  crayon-inline " >class Deck</span>, or <span class="lang:ruby decode:true  crayon-inline " >class BlackJack</span>? With a variety of classes, it took a lot of thought to plan out how I wanted the program to flow. A cool feature that I was able to implement was lifetime score tracking through file writing and reading. Even if you close the program and destroy the instance of the game, your score against the dealer would be saved to a file and read back into the game on the next run. <a href="https://github.com/joeypoon/BlackJack">BlackJack</a>.</p>
<p>Guest speaker today was Daniel Goldman of Stackwave. He talked a little about linked lists, trees, parent-child relationships, and DOM. Daniel is pretty awesome at breaking things down to understandable chunks for us newbies. He also hired two devs from the last TIY cohort so that's pretty awesome. We also bombarded him with questions about his company so got a lot of startup perspective. Definitely an awesome day.</p>

<h3>Bonus: First Hackathon!</h3>
<p>Wow am I tired. I just finished my first Hackathon and it has been an amazing time. I honestly had no idea what to expect when I went to the <a href="http://houstonhackathon.com/">3rd annual Houston Hackathon</a> on Saturday. I was dealing with a serious case of imposter syndrome. I was worried that I wouldn't be able to contribute. It was supremely helpful to have someone else to share this feeling with and to keep me accountable (looking at you <a href="https://twitter.com/MartinBee">@MartinBee</a>). I met some amazing people in the community and had fun while doing so.</p>
<p>The event started off with some logistics and a brief speech from Mayor Parker. We had a brief break with some Viet sandwiches and a ridiculous amount of Redbulls. Following the break, people looking for team-members had the chance to pitch their project ideas. This was perfect as I didn't really have anything in mind. There were some awesome and creative ideas. There were a ton of projects that sounded fun to work on but I was afraid that I wouldn't be able to contribute to some of the more technically difficult projects at this point in my career (why couldn't this Hackathon have taken place 6 weeks later :sadface). Fortunately there were so many projects to choose from that this didn't pose much of an issue.</p>
<p>I ended up working with an awesome team trying to make voting more fun and engaging (outline of <a href="http://challengepost.com/software/houston-vote">project</a>). Our goal was to allow visitors of the site to get info on why voting is important and to be able to take a pledge through the site. Pledgers choosing to upload a photo would get their picture superimposed with a check(representing a voting checkbox) and name posted on the site. Users would also be able to easily share this pledger's "badge" through Facebook and Twitter directly through the site. The idea was that this would help keep pledgers accountable and help generate additional exposure. I don't know if it is because we were all starving from working at full speed but the pizza provided for dinner was amazing. We worked through about 930pm before we split up to get some rest. It looked like a good half of the attendees planned on staying the night.</p>

<p>Sunday was a race to get the essential features running and scrapping what we couldn't complete in time. Presentations officially began at noon but we worked through until around 2pm to try to get more features working. You can view the presentations <a href="https://www.youtube.com/watch?v=UoFE-cWUpjM">here</a> (our team presents at about 1:38:40). We spent so much time worrying about our features that we forgot to plan out our presentation. We weren't able to finish everything we wanted to do but I'm pretty happy with what we were able to do in 24 hours. The site is live and you can visit it here: <a href="http://houston.vote/">Houston.Vote</a>.</p>

<h3>Final Thoughts</h3>
<p>This has been an exhausting week. I imagine it isn't going to get any less tiring anytime soon. Fortunately, it is an awesome kind of tiring. Met some awesome people, built some amazing programs, and learned a bunch of new things. This has definitely been a productive week.</p>
